Elm.Jan = Elm.Jan || {};
Elm.Jan.make = function (_elm) {
   "use strict";
   _elm.Jan = _elm.Jan || {};
   if (_elm.Jan.values)
   return _elm.Jan.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Jan",
   $Basics = Elm.Basics.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm),
   $String = Elm.String.make(_elm);
   var update = F2(function (action,
   model) {
      return function () {
         switch (action.ctor)
         {case "NoOp": return model;}
         _U.badCase($moduleName,
         "between lines 73 and 74");
      }();
   });
   var NoOp = {ctor: "NoOp"};
   var header = A2($Html.h1,
   _L.fromArray([]),
   _L.fromArray([$Html.text("Choose your weapon")]));
   var weaponView = F2(function (address,
   weapon) {
      return function () {
         var iconClassName = A2($Basics._op["++"],
         "fa-hand-",
         A2($Basics._op["++"],
         $String.toLower(weapon.name),
         "-o"));
         return A2($Html.div,
         _L.fromArray([$Html$Attributes.$class("medium-4 columns")]),
         _L.fromArray([A2($Html.a,
         _L.fromArray([$Html$Attributes.$class("weapon-wrapper")]),
         _L.fromArray([A2($Html.i,
                      _L.fromArray([$Html$Attributes.$class(A2($Basics._op["++"],
                      "weapon fa fa-5x ",
                      iconClassName))]),
                      _L.fromArray([]))
                      ,A2($Html.p,
                      _L.fromArray([$Html$Attributes.$class("weapon-label")]),
                      _L.fromArray([$Html.text(weapon.name)]))]))]));
      }();
   });
   var newWeapon = function (name) {
      return {_: {},name: name};
   };
   var model = {_: {}
               ,possibleWeapons: _L.fromArray([newWeapon("Rock")
                                              ,newWeapon("Paper")
                                              ,newWeapon("Scissors")])};
   var weaponsList = A2($Html.div,
   _L.fromArray([$Html$Attributes.$class("row weapons")]),
   A2($List.map,
   weaponView($Html.address),
   model.possibleWeapons));
   var view = F2(function (address,
   model) {
      return A2($Html.div,
      _L.fromArray([$Html$Attributes.$class("row game")]),
      _L.fromArray([header
                   ,weaponsList]));
   });
   var main = $StartApp$Simple.start({_: {}
                                     ,model: model
                                     ,update: update
                                     ,view: view});
   _elm.Jan.values = {_op: _op
                     ,main: main
                     ,newWeapon: newWeapon
                     ,model: model
                     ,weaponView: weaponView
                     ,header: header
                     ,weaponsList: weaponsList
                     ,view: view
                     ,NoOp: NoOp
                     ,update: update};
   return _elm.Jan.values;
};