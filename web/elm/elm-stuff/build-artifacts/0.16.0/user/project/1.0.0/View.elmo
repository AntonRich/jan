Elm.View = Elm.View || {};
Elm.View.make = function (_elm) {
   "use strict";
   _elm.View = _elm.View || {};
   if (_elm.View.values) return _elm.View.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Action = Elm.Action.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Mailbox = Elm.Mailbox.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Model = Elm.Model.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var resultView = F2(function (address,model) {
      return $String.isEmpty(model.resultMessage) ? A2($Html.div,_U.list([]),_U.list([])) : A2($Html.div,
      _U.list([$Html$Attributes.$class("row")]),
      _U.list([A2($Html.h1,_U.list([$Html$Attributes.$class("result")]),_U.list([$Html.text(model.resultMessage)]))
              ,A2($Html.a,
              _U.list([$Html$Attributes.$class("button"),A2($Html$Events.onClick,$Mailbox.newGameMailbox.address,{ctor: "_Tuple0"})]),
              _U.list([$Html.text("New Game")]))]));
   });
   var githubView = A2($Html.div,
   _U.list([$Html$Attributes.$class("github")]),
   _U.list([A2($Html.a,
   _U.list([$Html$Attributes.href("https://github.com/brianstorti/jan"),$Html$Attributes.target("blank")]),
   _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-3x fa-github")]),_U.list([]))]))]));
   var invite = A2($Html.div,
   _U.list([$Html$Attributes.$class("invite")]),
   _U.list([A2($Html.img,_U.list([$Html$Attributes.src("/images/arrow.png")]),_U.list([]))]));
   var header = function (model) {
      var headerText = _U.cmp($List.length(model.players),1) > 0 ? "Choose your weapon" : "Waiting for a second player";
      return A2($Html.h1,_U.list([]),_U.list([$Html.text(headerText)]));
   };
   var playerWeaponView = F3(function (address,player,model) {
      var weaponForThisPlayer = !_U.eq(player.name,model.currentPlayer);
      var noWeaponSelected = $String.isEmpty(player.weapon);
      var gameNotFinished = $String.isEmpty(model.resultMessage);
      var shouldHideWeapon = gameNotFinished && (noWeaponSelected || weaponForThisPlayer);
      var iconClassName = shouldHideWeapon ? "fa-question" : A2($Basics._op["++"],"fa-hand-",A2($Basics._op["++"],$String.toLower(player.weapon),"-o"));
      var weaponDescription = shouldHideWeapon ? "..." : player.weapon;
      return A2($Html.a,
      _U.list([$Html$Attributes.$class("weapon-wrapper -disabled")]),
      _U.list([A2($Html.p,_U.list([$Html$Attributes.$class("weapon-label")]),_U.list([$Html.text(player.name)]))
              ,A2($Html.i,_U.list([$Html$Attributes.$class(A2($Basics._op["++"],"weapon fa fa-5x ",iconClassName))]),_U.list([]))
              ,A2($Html.p,_U.list([$Html$Attributes.$class("weapon-label")]),_U.list([$Html.text(weaponDescription)]))]));
   });
   var playerView = F3(function (address,model,player) {
      return A2($Html.div,
      _U.list([$Html$Attributes.$class("medium-4 columns")]),
      _U.list([A2($Html.span,_U.list([$Html$Attributes.$class("label")]),_U.list([$Html.text(A2($Basics._op["++"],"Score: ",$Basics.toString(player.score)))]))
              ,A2($Html.div,_U.list([]),_U.list([A3(playerWeaponView,address,player,model)]))]));
   });
   var playersList = F2(function (address,model) {
      return A2($Html.div,_U.list([$Html$Attributes.$class("row players")]),A2($List.map,A2(playerView,address,model),model.players));
   });
   var weaponView = F3(function (address,model,weapon) {
      var shouldDisable = function (_p0) {    return $Basics.not($String.isEmpty(_p0));}(model.resultMessage) || _U.cmp($List.length(model.players),2) < 0;
      var disabledClass = shouldDisable ? "-disabled" : "";
      var iconClassName = A2($Basics._op["++"],"fa-hand-",A2($Basics._op["++"],$String.toLower(weapon),"-o"));
      return A2($Html.div,
      _U.list([$Html$Attributes.$class("medium-4 columns")]),
      _U.list([A2($Html.a,
      _U.list([$Html$Attributes.$class(A2($Basics._op["++"],"weapon-wrapper ",disabledClass))
              ,A2($Html$Events.onClick,$Mailbox.chooseWeaponMailbox.address,$String.toLower(weapon))]),
      _U.list([A2($Html.i,_U.list([$Html$Attributes.$class(A2($Basics._op["++"],"weapon fa fa-5x ",iconClassName))]),_U.list([]))
              ,A2($Html.p,_U.list([$Html$Attributes.$class("weapon-label")]),_U.list([$Html.text(weapon)]))]))]));
   });
   var weaponsList = F2(function (address,model) {
      return A2($Html.div,_U.list([$Html$Attributes.$class("row weapons")]),A2($List.map,A2(weaponView,address,model),model.possibleWeapons));
   });
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([$Html$Attributes.$class("row game")]),
      _U.list([invite,githubView,header(model),A2(weaponsList,address,model),A2(playersList,address,model),A2(resultView,address,model)]));
   });
   return _elm.View.values = {_op: _op
                             ,weaponView: weaponView
                             ,playerWeaponView: playerWeaponView
                             ,playerView: playerView
                             ,header: header
                             ,invite: invite
                             ,githubView: githubView
                             ,weaponsList: weaponsList
                             ,playersList: playersList
                             ,resultView: resultView
                             ,view: view};
};